unit EnviaEmail;

interface

uses
  IdSMTP, IdSSLOpenSSL, IdMessage, IdText, IdAttachmentFile,
  IdExplicitTLSClientServerBase;

  function EnviaMail(Email, Conta, Senha, Autentica, Smtp, Auth_SSL, Nom_exibe, Porta_smtp, Corpo, Destinatario, Assunto : String) : Boolean;
  procedure Enviar(Sender: TObject);

implementation


// Função para enviar email, pode ser incluida direto em uma uses sem formulario para simplificar o fonte

function EnviaMail(Email, Conta, Senha, Autentica, Smtp, Auth_SSL, Nom_exibe, Porta_smtp, Corpo, Destinatario, Assunto : String) : Boolean;
var
// variáveis e objetos necessários para o envio
IdSSLIOHandlerSocket: TIdSSLIOHandlerSocketOpenSSL;
IdSMTP: TIdSMTP;
IdMessage: TIdMessage;
IdText: TIdText;
sAnexo: string;
begin

IdSSLIOHandlerSocket := TIdSSLIOHandlerSocketOpenSSL.Create();
IdSMTP := TIdSMTP.Create();
IdMessage := TIdMessage.Create;

try

IdSSLIOHandlerSocket.SSLOptions.Method := sslvSSLv23;
IdSSLIOHandlerSocket.SSLOptions.Mode := sslmClient;


IdSMTP.IOHandler := IdSSLIOHandlerSocket;
IdSMTP.UseTLS := utUseImplicitTLS;
IdSMTP.AuthType := satDefault;
IdSMTP.Port := 465;
IdSMTP.Host := 'smtp.gmail.com';
IdSMTP.Username := 'usuario@gmail.com';
IdSMTP.Password := 'senha';

// Configuração da mensagem (TIdMessage)
IdMessage.From.Address := 'remetente@gmail.com';
IdMessage.From.Name := 'Nome do Remetente';
IdMessage.ReplyTo.EMailAddresses := IdMessage.From.Address;
IdMessage.Recipients.Add.Text := 'destinatario1@email.com';
IdMessage.Subject := 'Assunto do e-mail';
IdMessage.Encoding := meMIME;

// Configuração do corpo do email (TIdText)
IdText := TIdText.Create(IdMessage.MessageParts);
IdText.Body.Add('Corpo do e-mail');
IdText.ContentType := 'text/plain; charset=iso-8859-1';

// Opcional - Anexo da mensagem (TIdAttachmentFile)
sAnexo := 'C:\Anexo.pdf';
//if FileExists(sAnexo) then
//begin
//TIdAttachmentFile.Create(IdMessage.MessageParts, sAnexo);
//end;

// Conexão e autenticação
try
  IdSMTP.Connect;
  IdSMTP.Authenticate;
except //on E:Exception do
 // begin
   // MessageDlg('Erro na conexão ou autenticação: ' +
   //   E.Message, mtWarning, [mbOK], 0);
   Exit;
  end;
//end;

// Envio da mensagem
try
  IdSMTP.Send(IdMessage);
  MessageDlg('Mensagem enviada com sucesso!', mtInformation, [mbOK], 0);
except
On E:Exception do
begin
MessageDlg('Erro ao enviar a mensagem: ' + E.Message, mtWarning, [mbOK], 0);
end;
end;
finally
// desconecta do servidor
IdSMTP.Disconnect;
// liberação da DLL
UnLoadOpenSSLLibrary;
// liberação dos objetos da memória
FreeAndNil(IdMessage);
FreeAndNil(IdSSLIOHandlerSocket);
FreeAndNil(IdSMTP);
end;
end;


procedure Enviar(Sender: TObject);
begin
EnviaMail('email@servidor.com.br', //  Email
          'conta', //Conta sem_arroba_ou_com_arroba_depende_do_servidor
          'senha',// Senha
          'S', // Autentica
          'smtp.gmail.com', // Smtp
          'S', // Auth_SSL
          'Nome para exibição', // Nom_exibe
          'Porta', // Porta_smtp - SEMPRE UM VALOR NUMERICO, mas com APOSTROFE '
          'Corpo do email', // Corpo - Texto que vai na mensagem
          'Destinatario(s)', // Destinatario, ex: eu@vc.com;teste@teste.com...
          'Assunto');  // Assunto
end;

end.
